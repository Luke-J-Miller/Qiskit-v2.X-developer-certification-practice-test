"In Qiskit’s Pauli label convention, which qubit does the **right‑most** character refer to in the string 'XYZ'?",Qubit-0,Qubit-1,Qubit-2,It is backend-dependent,Qubit-0,"Per the documentation, the right‑most Pauli character corresponds to qubit‑0, so 'XYZ' means X on qubit‑2, Y on qubit‑1, Z on qubit‑0."
Which statement about `to_label()` vs `str(pauli)` is correct?,"`to_label()` may truncate long Paulis, while `str` never truncates",`to_label()` returns the full label with no truncation; `str` may truncate for large n,Both always truncate after 50 chars,`str` returns the full label; `to_label()` truncates,`to_label()` returns the full label with no truncation; `str` may truncate for large n,"The docs note that `str` can truncate long labels (default 50 chars), while `to_label()` returns the full string."
"Given `Pauli('XYZ')`, what operator does it represent?",Z ⊗ Y ⊗ X,X ⊗ Y ⊗ Z,Y ⊗ Z ⊗ X,Z ⊗ X ⊗ Y,X ⊗ Y ⊗ Z,"Left‑most character is the highest‑index qubit; right‑most is qubit‑0. 'XYZ' maps to X on qubit‑2, Y on qubit‑1, Z on qubit‑0, i.e., X ⊗ Y ⊗ Z."
"When selecting a subset of qubits from a `Pauli` using indexing (e.g., `P[indices]`), what happens to the group phase of the current Pauli?",It is preserved,It is conjugated,It is discarded,It doubles,It is discarded,The documentation warns that selecting subsets of Paulis discards the phase information of the current `Pauli`.
Which call disables string truncation for `str(Pauli(...))`?,`Pauli.set_truncation(0)`,`Pauli.set_truncation(-1)`,`Pauli.__truncate__ = None`,`Pauli.disable_truncation()`,`Pauli.set_truncation(0)`,Setting truncation to 0 disables truncation per the classmethod `set_truncation`.
What does `Pauli.tensor(other)` return?,other ⊗ self,self ⊗ other,Elementwise product,Kronecker sum,self ⊗ other,`tensor` forms a ⊗ b where a = self and b = other.
What does `Pauli.expand(other)` return?,self ⊗ other,other ⊗ self,Elementwise product,"Commutator [self, other]",other ⊗ self,`expand` returns the reverse‑order tensor product b ⊗ a where b = other and a = self.
Which equality holds for same‑type operators A and B?,A & B == A.dot(B),A & B == B.dot(A),"A & B == (A.compose(B, front=True)) == B.dot(A)",A & B == A.compose(B); both equal A.dot(B),A & B == B.dot(A),"By default, composition `&` is left matrix multiplication: A & B == A.compose(B) equals B.dot(A). `front=True` would switch to A.dot(B)."
Which `frame` argument makes `Pauli.evolve` perform **Heisenberg** picture evolution?,'s','h','H',None; only Schrödinger is supported,'h',Heisenberg evolution uses frame='h' and computes C† P C; Schrödinger uses frame='s' and computes C P C†.
"In the internal array representation, how is the n‑qubit Pauli written in terms of z, x, and q?",P = (-i)^{q} Z^z X^x,P = i^{q+z·x} Z^x X^z,P = (-i)^{q+z·x} Z^z X^x,P = (-1)^{q} X^z Z^x,P = (-i)^{q+z·x} Z^z X^x,The documented formula is P = (-i)^{q + z·x} Z^z X^x.
"For a single‑qubit `Pauli` initialized from symplectic bits with z=1, x=0, what label is produced (up to phase)?",X,Y,Z,I,Z,"z=1,x=0 yields Z; z=0,x=1 yields X; z=1,x=1 yields Y up to a phase factor."
What type does `Pauli.power(n)` return?,Pauli,Operator,Clifford,ScalarOp,Clifford,The group‑power mixin returns a `Clifford` for Pauli powers (with n>0) per the docs.
Which method converts a `Pauli` to a circuit instruction?,to_instruction(),to_operator(),to_matrix(),to_gate(),to_instruction(),`to_instruction()` converts to a Pauli circuit instruction.
Which method returns a dense or sparse numeric array for a `Pauli`?,to_operator(),to_matrix(),as_array(),as_numpy(),to_matrix(),`to_matrix(sparse=False)` returns a dense NumPy array; with `sparse=True` it returns a CSR matrix.
What exception is raised if the input array has an invalid shape when initializing a `Pauli`?,ValueError,TypeError,QiskitError,ShapeError,QiskitError,The constructor raises `QiskitError` on invalid shapes.
Which statement about `Pauli('XYZ')[::-1]` is correct?,It returns the same label 'XYZ',It returns 'ZYX',It raises QiskitError,It discards the phase and returns 'III',It returns 'ZYX',"Slicing reverses the order of the per‑qubit Paulis; phases are discarded when selecting subsets, but reversal here just inverts order to 'ZYX'."
What does `Pauli.delete(qubits)` do?,Replaces the specified qubits with I,Removes the specified qubits from the Pauli,Zeroes the x and z bits at those positions,Raises by design; deletion not supported,Removes the specified qubits from the Pauli,It returns a new `Pauli` with the specified qubits removed; indices out of range raise `QiskitError`.
Which attribute returns the number of qubits of an N‑qubit `Pauli`?,dim,num_qubits,num_clbits,size,num_qubits,`num_qubits` reports the number of qubits if the operator is N‑qubit.
Which statement about valid string initialization is correct?,"Phases like '-i' or '+j' may prefix the Pauli string (e.g., '-iZIZ')",Only real phases '+' or '-' are allowed; 'i'/'j' are invalid,A phase must always be explicitly '+1' or '-1',Only labels without phases are accepted,"Phases like '-i' or '+j' may prefix the Pauli string (e.g., '-iZIZ')","The docs allow optional phase prefixes formed from ['+','-',''], ['1',''], and ['i','j',''] before a Pauli string."
What is returned by `Pauli.adjoint()`?,The conjugate transpose of the Pauli (its adjoint),The transpose only,The complex conjugate only,Its inverse composed twice,The conjugate transpose of the Pauli (its adjoint),The method returns the adjoint (dagger) of the operator.
Which call applies a transpiler layout/permutation to a `Pauli`?,Pauli.apply_layout(...),Pauli.apply_mapping(...),Pauli.remap_qubits(...),Pauli.with_layout(...),Pauli.apply_layout(...),"`apply_layout(layout, num_qubits=None)` applies a transpiler layout or permutation to the Pauli."
