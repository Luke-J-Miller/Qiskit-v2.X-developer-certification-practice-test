Question,Answer 1,Answer 2,Answer 3,Answer 4,Correct Answer Choice,Explanation
What is the primary purpose of a Qiskit Runtime Session?,To group iterative calls and prioritize their jobs on the quantum computer,To permanently reserve a backend for a single user,To replace transpilation and routing steps,To automatically increase shot counts for accuracy,To group iterative calls and prioritize their jobs on the quantum computer,"A Session lets you group a collection of iterative primitive calls; once the first job starts, subsequent jobs in the session are prioritized by the scheduler."
When does a Qiskit Runtime Session officially start?,When you instantiate the Session object,When the first job within the session starts,When the backend is selected with least_busy(),When you call Session.close(),When the first job within the session starts,The session is started when the first job within the session begins running.
"During a session, how are subsequent jobs scheduled after the first job starts?",They are deprioritized behind all external jobs,They are executed only after the session ends,They are prioritized by the scheduler,They are canceled automatically unless flagged,They are prioritized by the scheduler,The documentation states that subsequent jobs within the session are prioritized.
Which statement correctly shows creating a session and submitting to a primitive?,with Session(backend) as s: sampler = Sampler(mode=s); job = sampler.run([isa_circuit]),with Session(backend) as s: job = backend.run([isa_circuit]),"with Session(backend) as s: sampler = Sampler(); job = sampler.run([isa_circuit], mode=s)",with Session(backend) as s: sampler = SamplerV1(mode=s); job = sampler.run(isa_circuit),with Session(backend) as s: sampler = Sampler(mode=s); job = sampler.run([isa_circuit]),"The example shows creating SamplerV2 as Sampler and passing the session via the 'mode' argument, then calling run with a list containing the ISA circuit."
"Which parameter is required in Session(backend, max_time=None, *, create_new=True)?",backend (BackendV2 instance),max_time (int only),create_new (must be False),service (QiskitRuntimeService),backend (BackendV2 instance),The constructor requires a BackendV2; max_time and create_new are optional.
What are valid types for the 'max_time' parameter when constructing a Session?,Only int seconds,Only str like '2h 30m 40s',Either int seconds or a string like '2h 30m 40s',A float representing minutes,Either int seconds or a string like '2h 30m 40s',The docs allow int seconds or a human-readable string such as '2h 30m 40s'.
What constraint applies to 'max_time' in Session?,It must equal the system imposed maximum,It must be less than the system imposed maximum,It has no constraints,It must be at least 24 hours,It must be less than the system imposed maximum,The maximum allowed time must be less than the system-imposed maximum.
What is the default behavior of 'create_new' in Session(...) and its effect?,Defaults to False; it prevents creating sessions,Defaults to True; POST session API is called to create a new session,Defaults to True; it reuses any existing session automatically,Defaults to False; it always reuses the last session,Defaults to True; POST session API is called to create a new session,The parameter defaults to True which creates a new session; use from_id to attach to an existing one.
What does Session.service return?,A BackendV2 instance,A QiskitRuntimeService associated with the session,A RuntimeJobV2 object,A PrimitiveResult object,A QiskitRuntimeService associated with the session,The 'service' attribute returns the QiskitRuntimeService tied to the session.
What does Session.session_id return for simulator backends?,A randomly generated string,None,The simulator's name,An empty string,None,The docs: 'Session ID. None if the backend is a simulator.'
What does Session.backend() return according to the API reference?,"The backend object or None, typed as 'str | None' in docs",Always a BackendV2 object,A list of backends,"Only the backend name string, never None","The backend object or None, typed as 'str | None' in docs",The method 'Return backend for this session. None if unknown.' The reference labels return type as 'str | None'.
What does Session.cancel() do?,Cancels all jobs (including finished ones) and deletes the session,Cancels all pending jobs in a session,Closes the session but lets jobs run,Restarts the session timer,Cancels all pending jobs in a session,The method cancels all pending jobs in the session.
What is the effect of Session.close()?,Stops accepting new jobs; queued/running jobs finish; session terminates when none pending,Immediately terminates all jobs and discards results,Deletes the session record,Pauses the session until resumed,Stops accepting new jobs; queued/running jobs finish; session terminates when none pending,"Close prevents new jobs; existing queued or running jobs complete, after which the session terminates."
Which key is NOT listed in Session.details()?,interactive_timeout,usage_time,backend_name,transpile_level,transpile_level,"The details dict includes keys like backend_name, interactive_timeout, usage_time; 'transpile_level' is not listed."
"In Session.details(), what does 'usage_time' represent?",Total wall-clock time since Session() was created,Time a quantum system is committed to complete a job (quantum usage),Time the client spent waiting on results,Sum of server processing times only,Time a quantum system is committed to complete a job (quantum usage),The field describes the time the system is dedicated to processing your job (usage).
Which of the following is a possible value for Session.status()?,"In progress, accepting new jobs",Sleeping,Queued,CompletedSuccessfully,"In progress, accepting new jobs","The documented statuses include: Pending; In progress, accepting new jobs; In progress, not accepting new jobs; Closed; None."
What does Session.status() return if the session has been explicitly closed or max_time expired?,Closed,Done,Terminated,Inactive,Closed,The status string 'Closed' is returned in this case.
How is Session.usage() defined?,"Time from first job start until session goes inactive, is closed, or last job completes—whichever is last",Always equal to total wall-clock duration,CPU time consumed by the server,Number of shots executed,"Time from first job start until session goes inactive, is closed, or last job completes—whichever is last",Usage is defined exactly that way; batch usage is defined separately as time jobs spend on the QPU.
What does Session.usage() return type indicate?,It always returns an int >= 0,It returns float seconds or None,"It returns a tuple (seconds, shots)",It returns a datetime,It returns float seconds or None,The method returns a float (seconds) or None.
"What is Session.from_id(session_id, service) used for?",To clone and close an existing session,To construct a Session object attached to an existing session id,To fetch results from a session without creating objects,To start a batch-mode session only,To construct a Session object attached to an existing session id,"The classmethod constructs a Session with a given, already existing session_id."
Which error is raised by Session.from_id(...) if the provided session_id does not exist?,IBMRuntimeError,IBMInputValueError,ValueError,RuntimeJobTimeoutError,IBMInputValueError,The docs specify IBMInputValueError for a non-existent session_id.
Which error can Session.from_id(...) raise if the backend for the session is unknown?,IBMRuntimeError,JobTimeoutError,QiskitBackendNotFoundError,ValueError,IBMRuntimeError,An IBMRuntimeError is raised if the backend of the session is unknown.
"In the example, what classical register name is used to retrieve counts?",meas,cr,alpha,beta,cr,"The example circuit defines ClassicalRegister(2, name='cr') and later uses pub_result.data.cr.get_counts()."
"In the example, how is the session supplied to the Sampler?",sampler = Sampler(session),sampler = Sampler(mode=session),sampler = Sampler(backend=session),sampler = Sampler(service=session),sampler = Sampler(mode=session),The sampler receives the session through the 'mode' parameter.
What happens if you open a Session on a simulator backend? What will session_id be?,It will be an empty string,It will be None,It will mirror the simulator name,It will be a UUID,It will be None,"For simulator backends, session_id returns None."
Which statement about using Session with multiple primitives is correct?,A single Session can submit jobs to one or more primitives,Sessions are limited to Sampler only,Sessions are limited to Estimator only,Each primitive must create its own Session,A single Session can submit jobs to one or more primitives,The docs say you can submit jobs to one or more primitives within a session.
What is a valid string format for max_time when opening a Session?,'2h 30m 40s','2hours:30min:40sec','150 minutes','9000s only','2h 30m 40s',The example format given is a string like '2h 30m 40s'.
What is the intended benefit of grouping iterative calls within a Session?,Lower transpilation time through caching,Prioritized scheduling and reduced queue latency between related jobs,Automatic error mitigation at level 3,Guaranteed exclusive QPU access,Prioritized scheduling and reduced queue latency between related jobs,Grouping jobs in a session leads to prioritized scheduling for subsequent jobs.
Which field in Session.details() indicates whether new jobs can still be submitted?,state,accepting_jobs,active_timeout,last_job_completed,accepting_jobs,The 'accepting_jobs' boolean indicates whether the session is accepting jobs.
Which pair correctly contrasts Session.cancel() and Session.close()?,cancel() cancels pending jobs; close() stops new jobs but lets queued/running finish,cancel() deletes results; close() restarts jobs,cancel() pauses usage; close() resumes usage,cancel() closes the session immediately; close() cancels all jobs,cancel() cancels pending jobs; close() stops new jobs but lets queued/running finish,This matches the documented semantics of cancel and close.
