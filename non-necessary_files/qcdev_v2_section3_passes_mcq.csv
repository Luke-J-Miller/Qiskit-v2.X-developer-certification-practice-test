Question,A,B,C,D,Correct,Explanation
Which pass assigns n circuit qubits to physical qubits 0..n-1 in order?,SetLayout,TrivialLayout,DenseLayout,SabreLayout,TrivialLayout,TrivialLayout chooses a layout by mapping qubits to 0..n-1 directly.
Which pass finds the most connected subset of qubits to place a circuit on?,DenseLayout,SabreLayout,VF2Layout,CSPLayout,DenseLayout,DenseLayout selects a layout by locating the most connected subset of device qubits.
Which pass chooses a layout via iterative bidirectional routing of the input circuit?,SabreLayout,TrivialLayout,SetLayout,ApplyLayout,SabreLayout,SabreLayout uses the SABRE heuristic with bidirectional routing to pick a layout.
Which pass formulates layout as a constraint satisfaction problem using backtracking?,CSPLayout,VF2Layout,DenseLayout,SabrePreLayout,CSPLayout,CSPLayout attempts layout via CSP with backtracking.
Which pass solves layout as a subgraph isomorphism problem using VF2++?,VF2Layout,SetLayout,ApplyLayout,Layout2qDistance,VF2Layout,VF2Layout maps the circuit onto the coupling graph via VF2++ subgraph isomorphism.
Which pass applies or updates the mapping of virtual to physical qubits in the DAG?,ApplyLayout,SetLayout,TrivialLayout,Layout2qDistance,ApplyLayout,ApplyLayout mutates the DAGCircuit to reflect the chosen qubit mapping.
"Which pass evaluates how good the selected layout is (e.g., distance for 2q ops)?",Layout2qDistance,VF2Layout,DenseLayout,SabrePreLayout,Layout2qDistance,Layout2qDistance scores the layout based on two‑qubit distances.
Which pass extends the DAG with virtual qubits that are in the layout but not yet used?,EnlargeWithAncilla,FullAncillaAllocation,SetLayout,ApplyLayout,EnlargeWithAncilla,EnlargeWithAncilla adds virtual qubits present in the layout into the circuit DAG.
Which pass allocates all idle nodes from the coupling map/target as ancilla on the layout?,FullAncillaAllocation,EnlargeWithAncilla,SabrePreLayout,DenseLayout,FullAncillaAllocation,FullAncillaAllocation populates the layout with available idle qubits as ancilla.
Which pass picks a starting layout for additional SABRE layout trials?,SabrePreLayout,SabreLayout,VF2Layout,CSPLayout,SabrePreLayout,SabrePreLayout helps seed SABRE with a good initial layout.
Which routing pass maps a circuit with minimal effort by inserting SWAP gates as needed?,BasicSwap,SabreSwap,LookaheadSwap,LayoutTransformation,BasicSwap,BasicSwap performs simple swap insertion to satisfy connectivity.
Which routing pass performs SWAP insertion using a lookahead heuristic?,LookaheadSwap,SabreSwap,BasicSwap,Commuting2qGateRouter,LookaheadSwap,LookaheadSwap uses a heuristic that looks ahead to future gates.
Which routing pass routes by inserting SWAPs using SABRE’s heuristic during routing?,SabreSwap,BasicSwap,StarPreRouting,LayoutTransformation,SabreSwap,SabreSwap uses the SABRE heuristic to insert SWAPs efficiently.
Which pass adds a SWAP circuit to implement a given (partial) permutation of qubits?,LayoutTransformation,Commuting2qGateRouter,BasicSwap,LookaheadSwap,LayoutTransformation,LayoutTransformation synthesizes a swap network for a specified permutation.
Which pass swap‑routes one or more commuting two‑qubit gates to fit the coupling map?,Commuting2qGateRouter,SabreSwap,BasicSwap,VF2PostLayout,Commuting2qGateRouter,Commuting2qGateRouter handles commuting 2Q gates collectively for routing.
Which pre‑routing step converts star to linear topology before routing?,StarPreRouting,LookaheadSwap,SabreSwap,BasicSwap,StarPreRouting,StarPreRouting performs a star‑to‑linear pre‑routing transformation.
Which pass translates gates to a target basis using an EquivalenceLibrary search?,BasisTranslator,Decompose,Unroll3qOrMore,TranslateParameterizedGates,BasisTranslator,BasisTranslator uses equivalence rules to map to a target basis.
Which pass expands a gate using its own decomposition rules in the circuit?,Decompose,BasisTranslator,UnitarySynthesis,SolovayKitaev,Decompose,Decompose replaces a gate with its definition stored on the instruction.
Which pass translates parameterized gates to a supported basis set?,TranslateParameterizedGates,Unroll3qOrMore,BasisTranslator,HighLevelSynthesis,TranslateParameterizedGates,TranslateParameterizedGates handles parameterized gates specifically.
Which pass recursively expands 3+ qubit gates until only 1q/2q remain?,Unroll3qOrMore,UnitarySynthesis,Decompose,BasisTranslator,Unroll3qOrMore,Unroll3qOrMore reduces multi‑qubit gates to 1Q/2Q primitives.
Which pass unrolls instructions that have custom definitions?,UnrollCustomDefinitions,Decompose,BasisTranslator,UnitarySynthesis,UnrollCustomDefinitions,UnrollCustomDefinitions replaces custom instructions with their definitions.
Which pass collects one‑qubit subcircuits for later consolidation/optimization?,Collect1qRuns,Collect2qBlocks,Optimize1qGates,ConsolidateBlocks,Collect1qRuns,Collect1qRuns groups contiguous 1Q operations.
Which pass collects two‑qubit subcircuits?,Collect2qBlocks,Collect1qRuns,Split2QUnitaries,OptimizeCliffords,Collect2qBlocks,Collect2qBlocks gathers contiguous 2Q regions.
Which pass collects blocks and then consolidates them in one go?,CollectAndCollapse,ConsolidateBlocks,CollectMultiQBlocks,CommutationAnalysis,CollectAndCollapse,CollectAndCollapse is a general framework to gather and consolidate blocks.
Which pass replaces blocks of Clifford gates by a single Clifford object?,CollectCliffords,OptimizeCliffords,CommutativeCancellation,HoareOptimizer,CollectCliffords,CollectCliffords compresses Clifford blocks into a Clifford object.
Which pass replaces linear gate blocks (CX/SWAP) by a LinearFunction?,CollectLinearFunctions,ConsolidateBlocks,Split2QUnitaries,TemplateOptimization,CollectLinearFunctions,CollectLinearFunctions summarizes linear reversible blocks as LinearFunction.
Which pass finds commutation relations between DAG nodes?,CommutationAnalysis,CommutativeCancellation,InverseCancellation,OptimizeAnnotated,CommutationAnalysis,CommutationAnalysis is an analysis pass for commutation structure.
Which pass cancels redundant self‑adjoint gates through commutation relations?,CommutativeCancellation,InverseCancellation,Optimize1qGates,RemoveIdentityEquivalent,CommutativeCancellation,CommutativeCancellation removes redundant Hermitian gates exploiting commutation.
Which pass cancels pairs of inverse gates using commutation relations?,CommutativeInverseCancellation,InverseCancellation,OptimizeCliffords,RemoveBarriers,CommutativeInverseCancellation,It targets inverse pairs and uses commutation to expose them.
Which pass replaces consecutive gates by a single Unitary node?,ConsolidateBlocks,CollectAndCollapse,Optimize1qGatesDecomposition,Split2QUnitaries,ConsolidateBlocks,ConsolidateBlocks synthesizes a single unitary per block.
Which pass removes qubits idle within control‑flow operations?,ContractIdleWiresInControlFlow,RemoveFinalReset,RemoveBarriers,MergeAdjacentBarriers,ContractIdleWiresInControlFlow,It contracts idle wires inside control‑flow regions.
Which pass removes permutation operations from a pre‑layout circuit?,ElidePermutations,OptimizeSwapBeforeMeasure,GateDirection,CheckGateDirection,ElidePermutations,ElidePermutations drops pre‑layout permutations that won’t matter after mapping.
Which pass optimizes chains of u1/u2/u3 into a single gate?,Optimize1qGates,Optimize1qGatesDecomposition,OptimizeAnnotated,WrapAngles,Optimize1qGates,Optimize1qGates merges basis‑specific 1Q rotations.
Which pass optimizes 1Q gate strings (with 2Q interruptions) via commuting and resynthesis?,Optimize1qGatesSimpleCommutation,Optimize1qGatesDecomposition,CommutationAnalysis,Split2QUnitaries,Optimize1qGatesSimpleCommutation,It commutes around interruptions and resynthesizes 1Q strings.
Which pass targets Clifford+T circuits specifically for optimization?,OptimizeCliffordT,OptimizeCliffords,TemplateOptimization,HoareOptimizer,OptimizeCliffordT,OptimizeCliffordT is specialized for Clifford+T patterns.
Which pass combines consecutive Clifford operations over the same qubits?,OptimizeCliffords,CollectCliffords,CommutativeCancellation,TemplateOptimization,OptimizeCliffords,OptimizeCliffords collapses consecutive Cliffords.
Which pass removes swaps that are immediately followed by measurement (adapting the measurement)?,OptimizeSwapBeforeMeasure,RemoveDiagonalGatesBeforeMeasure,RemoveFinalMeasurements,RemoveBarriers,OptimizeSwapBeforeMeasure,It removes unnecessary pre‑measurement SWAPs and adjusts reads.
Which pass removes diagonal gates before measurements?,RemoveDiagonalGatesBeforeMeasure,RemoveFinalReset,ResetAfterMeasureSimplification,RemoveResetInZeroState,RemoveDiagonalGatesBeforeMeasure,Diagonal operations do not affect Z‑basis outcomes at the end.
Which pass removes a final reset on a qubit wire?,RemoveFinalReset,RemoveResetInZeroState,RemoveFinalMeasurements,RemoveIdentityEquivalent,RemoveFinalReset,Reset at the end has no observable effect.
Which pass removes reset when the qubit is already in |0⟩?,RemoveResetInZeroState,ResetAfterMeasureSimplification,RemoveFinalReset,ElidePermutations,RemoveResetInZeroState,"If the state is |0⟩, a reset is redundant."
Which pass replaces reset‑after‑measure with a conditional X gate?,ResetAfterMeasureSimplification,RemoveFinalReset,OptimizeSwapBeforeMeasure,RemoveFinalMeasurements,ResetAfterMeasureSimplification,It uses conditional X to achieve the same effect more natively.
Which pass attempts to split 2Q unitaries into two single‑qubit gates?,Split2QUnitaries,ConsolidateBlocks,Collect2qBlocks,UnitarySynthesis,Split2QUnitaries,Split2QUnitaries tries to reduce two‑qubit gates into 1Q components when possible.
Which pass uses user‑provided templates to optimize circuits?,TemplateOptimization,HoareOptimizer,OptimizeAnnotated,CollectAndCollapse,TemplateOptimization,TemplateOptimization matches and replaces using optimization templates.
Which pass removes gates with negligible effects (identity‑equivalent)?,RemoveIdentityEquivalent,RemoveBarriers,FilterOpNodes,WrapAngles,RemoveIdentityEquivalent,It prunes operations that are effectively the identity.
Which scheduling pass places instruction start times as early as possible?,ASAPScheduleAnalysis,ALAPScheduleAnalysis,PadDelay,ConstrainedReschedule,ASAPScheduleAnalysis,ASAP = As Soon As Possible (early starts).
Which scheduling pass places instruction stop times as late as possible?,ALAPScheduleAnalysis,ASAPScheduleAnalysis,PadDelay,PadDynamicalDecoupling,ALAPScheduleAnalysis,ALAP = As Late As Possible (late stops).
Which pass pads idle time with explicit Delay instructions?,PadDelay,PadDynamicalDecoupling,TimeUnitConversion,SetIOLatency,PadDelay,PadDelay inserts Delay nodes where qubits would otherwise be idle.
Which pass inserts dynamical decoupling sequences (context‑aware X‑sequence)?,ContextAwareDynamicalDecoupling,PadDynamicalDecoupling,ConstrainedReschedule,InstructionDurationCheck,ContextAwareDynamicalDecoupling,It inserts DD considering gate and qubit context.
Which pass inserts general DD sequences to pad idle time?,PadDynamicalDecoupling,PadDelay,ContextAwareDynamicalDecoupling,TimeUnitConversion,PadDynamicalDecoupling,PadDynamicalDecoupling adds DD pulses during idle periods.
Which pass converts/normalizes circuit time units to a chosen unit?,TimeUnitConversion,SetIOLatency,ConstrainedReschedule,ASAPScheduleAnalysis,TimeUnitConversion,It enforces a consistent time unit across the circuit.
Which pass reschedules nodes to conform to hardware alignment constraints?,ConstrainedReschedule,InstructionDurationCheck,PadDelay,TimeUnitConversion,ConstrainedReschedule,ConstrainedReschedule updates start times to meet alignment rules.
Which pass validates instruction durations for rescheduling?,InstructionDurationCheck,ConstrainedReschedule,PadDelay,ASAPScheduleAnalysis,InstructionDurationCheck,It checks that durations are valid for subsequent rescheduling.
Which pass sets I/O latency information on the input circuit?,SetIOLatency,TimeUnitConversion,PadDelay,ConstrainedReschedule,SetIOLatency,SetIOLatency annotates the circuit with IO latency details.
Which analysis pass calculates the circuit depth?,Depth,Width,Size,CountOps,Depth,Depth reports the longest path length in levels.
Which analysis pass calculates the number of operations?,Size,CountOps,Width,Depth,CountOps,CountOps counts operations in the DAG.
Which analysis pass returns the longest path nodes in the DAG?,DAGLongestPath,CountOpsLongestPath,Depth,Width,DAGLongestPath,DAGLongestPath returns the path as node objects.
Which analysis pass counts operations along the DAG’s longest path?,CountOpsLongestPath,DAGLongestPath,Depth,Size,CountOpsLongestPath,It counts ops restricted to the longest path.
Which analysis pass calculates the circuit width (qubit count)?,Width,Depth,Size,NumTensorFactors,Width,Width provides the number of qubit wires.
Which analysis pass estimates resources by requiring other analysis passes automatically?,ResourceEstimation,Size,Width,Depth,ResourceEstimation,ResourceEstimation orchestrates other passes to estimate resources.
Which analysis pass calculates the number of tensor factors?,NumTensorFactors,Size,Width,Depth,NumTensorFactors,NumTensorFactors reports how many tensor-product components exist.
Which analysis pass calculates the size of a DAG circuit?,Size,CountOps,Depth,Width,Size,Size measures the number of nodes in the DAG.
Which pass synthesizes higher‑level objects (with configurable methods via HLSConfig)?,HighLevelSynthesis,UnitarySynthesis,SolovayKitaev,LinearFunctionsToPermutations,HighLevelSynthesis,HighLevelSynthesis handles high‑level objects; HLSConfig selects methods per type.
Which config object selects methods for HighLevelSynthesis per object type?,HLSConfig,UnitarySynthesis,BasisTranslator,Decompose,HLSConfig,HLSConfig configures methods used by HighLevelSynthesis.
Which pass promotes linear functions to permutations when possible?,LinearFunctionsToPermutations,CollectLinearFunctions,UnitarySynthesis,SolovayKitaev,LinearFunctionsToPermutations,It upgrades reversible linear blocks to permutations if applicable.
Which pass approximately decomposes 1Q gates to a discrete basis?,SolovayKitaev,UnitarySynthesis,Decompose,BasisTranslator,SolovayKitaev,Solovay‑Kitaev approximates single‑qubit gates over a discrete set.
Which pass synthesizes gates according to their basis gates (target‑aware)?,UnitarySynthesis,BasisTranslator,Decompose,SolovayKitaev,UnitarySynthesis,UnitarySynthesis produces native‑basis implementations of gates.
Which pass improves an existing layout after transpilation using VF2++?,VF2PostLayout,VF2Layout,SabreLayout,DenseLayout,VF2PostLayout,VF2PostLayout refines the layout post‑mapping using VF2++.
Which pass adds a barrier before final measurements?,BarrierBeforeFinalMeasurements,MergeAdjacentBarriers,RemoveBarriers,RemoveFinalMeasurements,BarrierBeforeFinalMeasurements,It inserts a barrier before the last measurements.
Which pass checks if two‑qubit gates follow the coupling‑map direction?,CheckGateDirection,GateDirection,GatesInBasis,CheckMap,CheckGateDirection,CheckGateDirection analyzes for direction compliance.
Which pass modifies asymmetric gates to match hardware direction?,GateDirection,CheckGateDirection,LayoutTransformation,WrapAngles,GateDirection,GateDirection transforms gates to satisfy directed coupling.
Which pass checks if a DAG is already mapped to a coupling map?,CheckMap,GatesInBasis,RemoveBarriers,FixedPoint,CheckMap,CheckMap verifies mapping compliance.
Which pass checks whether all gates are in a given basis set?,GatesInBasis,BasisTranslator,UnitarySynthesis,CheckMap,GatesInBasis,GatesInBasis confirms gate set membership.
Which pass removes adjacent barriers by merging them?,MergeAdjacentBarriers,RemoveBarriers,BarrierBeforeFinalMeasurements,FixedPoint,MergeAdjacentBarriers,It condenses consecutive barriers into one.
Which pass returns a circuit with all barriers removed?,RemoveBarriers,MergeAdjacentBarriers,BarrierBeforeFinalMeasurements,RemoveFinalMeasurements,RemoveBarriers,RemoveBarriers strips barrier instructions.
Which pass removes final measurements and trailing barriers?,RemoveFinalMeasurements,RemoveFinalReset,RemoveDiagonalGatesBeforeMeasure,OptimizeSwapBeforeMeasure,RemoveFinalMeasurements,It deletes terminal measurements and end barriers.
Which pass unrolls for‑loops when possible?,UnrollForLoops,Unroll3qOrMore,UnrollCustomDefinitions,ConstrainedReschedule,UnrollForLoops,UnrollForLoops expands loops into repeated bodies when feasible.
Which pass removes all operations that match a user‑provided filter?,FilterOpNodes,ContainsInstruction,RemoveIdentityEquivalent,TemplateOptimization,FilterOpNodes,FilterOpNodes prunes ops based on a predicate.
Which analysis pass detects whether the DAG contains a specific instruction?,ContainsInstruction,FilterOpNodes,CountOps,FixedPoint,ContainsInstruction,ContainsInstruction answers presence/absence of a given op.
Which pass wraps rotation angles to a target‑specified bound?,WrapAngles,RemoveIdentityEquivalent,Optimize1qGates,TimeUnitConversion,WrapAngles,WrapAngles normalizes angles into the hardware’s accepted range.
Which pass checks whether a property or DAG reached a fixed point?,FixedPoint,DAGFixedPoint,MinimumPoint,ResourceEstimation,FixedPoint,FixedPoint is a general check; DAGFixedPoint targets the DAG.
Which pass checks if the DAG itself reached a fixed point?,DAGFixedPoint,FixedPoint,MinimumPoint,Error,DAGFixedPoint,DAGFixedPoint specifically monitors the DAG for convergence.
Which pass checks if the DAG reached a relative semi‑stable minimum over runs?,MinimumPoint,FixedPoint,DAGFixedPoint,Error,MinimumPoint,MinimumPoint detects a semi‑stable point across iterations.
